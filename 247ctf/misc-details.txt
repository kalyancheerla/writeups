# 1 - The text editor jail
vim in a browser
:shell provides access

# 2 - An impossible number
int max number
2147483647

# 3 - The flag lottery
as seed input at the exact second is same
random generates the same input.
echo "1" | nc ip port;nc ip port

# 4 - Error reporting protocol
bunch of ICMP packets
can be seen exchanging picture
extracted it using tshark (data bytes of a ICMP packet)
tshark -r <input_pcap_file> -x | vi -
vim global (g) magic
:g/0000/d # delete lines
:g/0020/exe "normal! 0w10dw" # to get exact offset
# delete unnecessary lines
xxd -r -p hexdump > outbin

# 5 - Not my modulus
Given bunch of private keys and TLSv1.2 pcap file
Tried to understand TLSv1.2 protocol
wireshark -> Edit -> preferences -> protocols -> \
tls -> ~/.config/wireshark/ssl_keys -> vim add all the keys in below format
"Server IP","PORT","expected protocol (HTTP)","keyfile with full path","<any passwd (empty)>"
reload wireshark, decode application data (tlsv1.2) frame, then http frames will be visible.

# 6 - Hidden Painting
Bunch of x & y co-ordinates in given file, just plot them.
xyplot.py

# 7 - The encrypted flag
file info gave us "openssl enc'd data with salted password"
so lets try bruteforce-salted-openssl with rockyou list.
bruteforce-salted-openssl -f ~/docs/rockyou.txt -d sha256 encrypted_flag.enc #passwd list and digest
openssl aes-256-cbc -d -in encrypted_flag.enc -out decrypted.txt -k "passwd obtained"
